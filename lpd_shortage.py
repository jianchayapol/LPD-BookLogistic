# -*- coding: utf-8 -*-
"""LPD-shortage.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WUPCyJ1gQJqhyKnJrP4iK_MhtWVzsauR
"""

from os import read
import csv
import matplotlib.pyplot as plt
from datetime import datetime,timedelta

# ================= Global Variables ====================

delivery_data = dict() # { Order : [deliveryId 1,2,...] }
books_deliver = dict() # { deliveryId : [BookId 1,2,...]}
book_details = dict() # { BookId : productName }
delivery_date = dict() # { deliveryId : CreatedDate }
time_diff_from_prev = dict() # { deliveryId : time }

DeliverySizeFreq = [['#books','Freq']]
OrderDeliveryDetails = [['Order ID','Transportation Round(s)','DeliveryID','#Books','Books (SKU)','Books Detail','DateCreated','Time diff from Prev.Round','Time diff from 1st Round']]

# ==================== Functions ========================

def readData(filename):
  f = open(filename+".csv", "r", encoding="utf-8")
  lines = f.readlines()
  checker = ''
  for line in lines[1:]:
    data_input = line.strip().split(',')
    try:
      deliveryId = data_input[0]
      orderId = (data_input[1]).split('-')[0]
      date = data_input[2]
      transportation_type = data_input[9]
      bookId = data_input[11]
      product_name = data_input[12]
      quantity = int(data_input[13])

      # ======== Delivery - Created Date ===========
      if not delivery_date.get(deliveryId):
        delivery_date[deliveryId] = date

      # ======== Books Delivery Details ===========
      if(books_deliver.get(deliveryId)):
        for i in range(int(quantity)):
          books_deliver[deliveryId].append(bookId)
      else:
        books_deliver[deliveryId] = [bookId]*int(quantity)

      # ======== Book SKU Details ===========
      if not book_details.get(bookId):
        book_details[bookId] = product_name

      if(checker == orderId): continue

      # ======== Orders Details ===========
      if(delivery_data.get(orderId)):
        delivery_data[orderId].append(deliveryId)
      else:
        delivery_data[orderId] = [deliveryId]
      checker = orderId
    except:
      print('Found:',data_input)


def writeCSV(file_path,data):
  # Open the file in write mode and specify newline='' to handle line endings correctly
  with open(file_path, 'w', newline='') as file:
    writer = csv.writer(file)
    # Write the data to the CSV file
    writer.writerows(data)
  print(f"CSV file '{file_path}' created successfully.")


def get_time_diff(string1,string2):
  # Convert strings to datetime objects
  datetime1 = datetime.strptime(string1, "%Y-%m-%d %H:%M:%S")
  datetime2 = datetime.strptime(string2, "%Y-%m-%d %H:%M:%S")
  # Calculate the time difference
  time_difference = datetime1 - datetime2
  return time_difference

# =========================== * main function * =================================

def main():

  # Select year ========================
  year = '2023'
  # ====================================
  if year == '2022':
    dataset = ['2203','2204','2205','2206','2207','2208','2209','2210','2211','2212']
  elif year == '2023':
    dataset = ['2301','2302','2303','2304','2305']

  for e in dataset:
    readData(e+'-Cleaned')
    print('********** Data - Year: ',year,' ***********')
  print('Order count = ',len(delivery_data),'orders')
  print('Delivery count = ',len(delivery_date),'rounds')
  print("-----------------------")
  n = 0
  short_time_diff = dict()
  for i in range(7):
    short_time_diff[i+1]=0

  for order_id, list_id in delivery_data.items(): # {orderID: [DO1,DO2,DO3,...]}
    delivery_ids = sorted(list_id)
    timediff_prev = 0
    timediff_first = 0
    delivery_round = len(delivery_ids)
    sku_ids,sku_names = '',''

    OrderDeliveryDetails.append([order_id,delivery_round,str(delivery_ids)])

    id = delivery_ids[0]
    time_first = delivery_date[id]  #string
    time_diff_from_prev[id] = 0
    sku_ids = '\n'.join(books_deliver[id])
    for book in books_deliver[id]:
      sku_names += (book_details[book]+'\n')

    OrderDeliveryDetails.append(['','',id,len(books_deliver[id]),sku_ids,sku_names,delivery_date[id],timediff_prev,timediff_first])

    for i in range(1,len(delivery_ids)):
      id = delivery_ids[i]
      id_prev = delivery_ids[i-1]
      sku_ids,sku_names = '',''
      sku_ids = '\n'.join(books_deliver[id])
      for book in books_deliver[id]:
        sku_names += (book_details[book]+'\n')
      timediff_prev = get_time_diff(delivery_date[id],delivery_date[id_prev])
      timediff_first = get_time_diff(delivery_date[id],time_first)
      time_diff_from_prev[id] = timediff_prev
      for i in range(7):
        if(timediff_prev < timedelta(days=(i+1))): short_time_diff[i+1]+=1

      OrderDeliveryDetails.append(['','',id,len(books_deliver[id]),sku_ids,sku_names,delivery_date[id],timediff_prev,timediff_first])

    # if(len(delivery_ids)>=10):
      # print('orderID: ',order_id,'  ',delivery_ids)
    n+=len(delivery_ids)
  print("-----------------------")
  print('Average Transportation Round is ',n/len(delivery_data),' round/order')
  print("-----------------------")
  print("Delivery with Short Diff Time Between Prev. Order : ")
  for d,f in short_time_diff.items():
    print(" >>> Less than ",d," day(s)  frequency =",f,"rounds" )
  count = dict()
  n = 0
  for k,v in books_deliver.items(): # { deliveryId : [BookId 1,2,...]}
    # print('deliveryID: ',k,' Total Books:',len(v), ' -> ',v)
    if(count.get(len(v))):
      count[len(v)]+=1
    else:
      count[len(v)] = 1
    n+=len(v)
    if(len(v)>50): print("BIG ORDER (>50 items) delivery .. deliveryID :", k)
  print("-----------------------")
  print('average delivery size = ',n/len(books_deliver),' books.')
  sorted_count = sorted(count.items(), key=lambda x:x[0])
  x = []
  y = []
  for a,b in sorted_count:
    print('#books:',a,'freq=',b)
    x.append(a)
    y.append(b)
    DeliverySizeFreq.append([a,b])

  DeliverySizeFreq.append(['sum',sum([int(e[1]) for e in DeliverySizeFreq[1:]])])

  plt.bar(x, y)
  plt.xlabel('#Books')
  plt.ylabel('Freq.')
  plt.title('Delivery Size')
  plt.show()

  writeCSV('DeliverySizeFreq.csv',DeliverySizeFreq)
  writeCSV('OrderDeliveryDetails.csv',OrderDeliveryDetails)

main()

print('-----------------------')

x = [len(s) for s in delivery_data.values()]
count_round = dict()
for round in x:
  if count_round.get(round):
    count_round[round]+=1
  else:
    count_round[round]=1

print(count_round)
print('--------------------------')
sorted_count = sorted(count_round.items(), key=lambda x:x[0])

count_list = [['#Round(s)','Frequency']]

for a,b in sorted_count:
  count_list.append([a,b])
  print('  >>>  ' , a, ' rounds',' freq.= ', b)

writeCSV('count_round.csv',count_list)

print('--------------------------')

for orderId,deliveryIds in delivery_data.items():
  if len(deliveryIds)==4:
    print('order ID:',orderId,'4 rounds delivery: ',deliveryIds)